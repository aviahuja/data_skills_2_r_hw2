summarise(n=n(), mean=mean(), sd=sd(), min(), max=max())
random_vars %>%
group_by(chosen_profession) %>%
summarise(n=n(), mean=mean(econ_earn), sd=sd(econ_earn), min(econ_earn), max=max(econ_earn))
earnings_table <- random_vars %>%
group_by(chosen_profession) %>%
summarise(n=n(), mean=mean(econ_earn), sd=sd(econ_earn), min(econ_earn), max=max(econ_earn))
View(earnings_table)
account_table <- random_vars %>%
group_by(chosen_profession) %>%
summarise(n=n(), mean=mean(acc_earn), sd=sd(acc_earn), min(acc_earn), max=max(acc_earn))
View(account_table)
econ_table <- random_vars %>%
group_by(chosen_profession) %>%
summarise(n=n(), mean=mean(econ_earn), sd=sd(econ_earn), min(econ_earn), max=max(econ_earn))
View(econ_table)
?geom_histogram
library(tidyverse)
library(mvtnorm)
library(gridExtra) #
install.packages("gridExtra")
library(gridExtra) #helps us plot graphs next to one another
set.seed(21102109)
n <- 100000
class_matrix <- matrix(c(10^8, 4.33*10^7, 4.3*10^7, 2.5*10^7),
nrow=2, ncol=2)
class_earnings <- as_tibble(rvmnorm(n, mean=c(60000, 65000),
sigma=class_matrix),
.name_repair='minimal')
class_earnings <- as_tibble(rmvnorm(n, mean=c(60000, 65000),
sigma=class_matrix),
.name_repair='minimal')
hw_matrix <- matrix(c(10^8, 0, 0, 2.5*10^7),
nrow=2, ncol=2)
hw_earnings <- as_tibble(rmvnorm(n, mean=c(60000, 65000),
sigma=hw_matrix),
.name_repair='minimal')
colnames(hw_earnings) <- c('economist', 'accountant')
class_earnings <- hw_earnings %>%
mutate(career=case_when(accountant > economist ~ "accountant",
economist >= accountant ~ "economist"))
hw_earnings <- hw_earnings %>%
mutate(career=case_when(accountant > economist ~ "accountant",
economist >= accountant ~ "economist"))
View(hw_earnings)
#Initialization
library(tidyverse)
library(mvtnorm)
library(gridExtra)
set.seed(21102109)
n <- 100000
class_matrix <- matrix(c(100000000, 43000000,43000000, 25000000),
nrow=2, ncol=2)
View(class_matrix)
class_earnings <- as_tibble(rmvnorm(n, mean=c(60000, 65000),
sigma=class_matrix),
.name_repair='minimal')
View(class_earnings)
colnames(class_earning) <- c('economist', 'accountant')
colnames(class_earnings) <- c('economist', 'accountant')
class_earnings <- class_earnings %>%
mutate(career=case_when(accountant > economist ~ "accountant",
economist >= accountant ~ "economist"))
View(class_earnings)
ggplot() +
coord_cartesian(xlim=c(45000, 85000), ylim=c(30000,90000)) + # Makes sure the x-axis is coordinated for both graphs
geom_smoot(aes(x=accountant, y=economist, color ="Class Model"),
method="lm", data=class_earnings)
ggplot() +
coord_cartesian(xlim=c(45000, 85000), ylim=c(30000,90000)) + # Makes sure the x-axis is coordinated for both graphs
geom_smooth(aes(x=accountant, y=economist, color ="Class Model"),
method="lm", data=class_earnings)
library(tidyverse)
library(mvtnorm)
library(gridExtra)
n <- 100000 # setting the number of obs to draw from
set.seed(21102109) #setting the seed for reproducibility of results
# Question - 6(a)
# Correlation coefficient = 0.2
# Drawing the distribution
hw_matrix_1 <- matrix(c(100000000, 10000000, 10000000, 25000000),
nrow=2, ncol=2)
hw_earnings_1 <- as_tibble(rmvnorm(n, mean=c(60000, 65000),
sigma=hw_matrix_1),
.name_repair='minimal')
colnames(hw_earnings_1) <- c('economist', 'accountant')
View(hw_matrix_1)
View(hw_earnings_1)
hw_earnings_1 <- hw_earnings_1 %>%
mutate(career=case_when(accountant > economist ~ "accountant",
economist >= accountant ~ "economist"),
observed_earnings=case_when(accountant > economist ~ accountant,
economist >= accountant ~ economist))
View(hw_earnings_1)
# # Question - 6(b)
# Correlation coefficient = 0.7
# Drawing the distribution
hw_matrix_2 <- matrix(c(100000000, 35000000, 35000000, 25000000),
nrow=2, ncol=2)
hw_earnings_2 <- as_tibble(rmvnorm(n, mean=c(60000, 65000),
sigma=hw_matrix_2),
.name_repair='minimal')
colnames(hw_earnings_2) <- c('economist', 'accountant')
hw_earnings_2 <- hw_earnings_2 %>%
mutate(career=case_when(accountant > economist ~ "accountant",
economist >= accountant ~ "economist"),
observed_earnings=case_when(accountant > economist ~ accountant,
economist >= accountant ~ economist))
View(hw_earnings_2)
ggplot() +
coord_cartesian(xlim=c(45000, 85000), ylim=c(30000, 90000)) +
geom_smooth(aes(x=accountant, y=economist, color="Q.6(a) Model"),
method="lm", data=hw_earnings_1) +
geom_smooth(aes(x=accountant, y=economist, color="Q.6(b) Model"),
method="lm", data=hw_earnings_2)
ggplot() +
coord_cartesian(xlim=c(35000, 90000), ylim=c(30000, 90000)) +
geom_smooth(aes(x=accountant, y=economist, color="Q.6(a) Model"),
method="lm", data=hw_earnings_1) +
geom_smooth(aes(x=accountant, y=economist, color="Q.6(b) Model"),
method="lm", data=hw_earnings_2)
ggplot() +
coord_cartesian(xlim=c(40000, 90000), ylim=c(30000, 90000)) +
geom_smooth(aes(x=accountant, y=economist, color="Q.6(a) Model"),
method="lm", data=hw_earnings_1) +
geom_smooth(aes(x=accountant, y=economist, color="Q.6(b) Model"),
method="lm", data=hw_earnings_2)
hw_hist_1 <- hw_earnings_1 %>%
ggplot() +
ggtitle("Question 6(a)/Corr: 0.2") +
coord_cartesian(xlim=c(45000, 90000)) +
geom_histogram(aes(x=observed_earnings,
fill=career),
binwidth=1000)
hw_hist_2 <- hw_earnings_2 %>%
ggplot() +
ggtitle("Question 6(b)/Corr: 0.7") +
coord_cartesian(xlim=c(45000, 90000)) +
geom_histogram(aes(x=observed_earnings,
fill=career),
binwidth=1000)
grid.arrange(hw_hist_1, hw_hist_2)
hw_earnings_1 %>%
group_by(career) %>%
summarise(accountant_earnings=mean(accountant),
economist_earnings=mean(economist),
n=n())
hw_earnings_2 %>%
group_by(career) %>%
summarise(accountant_earnings=mean(accountant),
economist_earnings=mean(economist),
n=n())
hw_matrix_3 <- matrix(c(225000000, 52500000, 52500000, 25000000),
nrow=2, ncol=2)
hw_earnings_3 <- as_tibble(rmvnorm(n, mean=c(60000, 65000),
sigma=hw_matrix_3),
.name_repair='minimal')
colnames(hw_earnings_3) <- c('economist', 'accountant')
hw_earnings_3 <- hw_earnings_3 %>%
mutate(career=case_when(accountant > economist ~ "accountant",
economist >= accountant ~ "economist"),
observed_earnings=case_when(accountant > economist ~ accountant,
economist >= accountant ~ economist))
View(hw_earnings_3)
ggplot() +
coord_cartesian(xlim=c(40000, 90000), ylim=c(30000, 90000)) +
geom_smooth(aes(x=accountant, y=economist, color="Q.6(b) Model"),
method="lm", data=hw_earnings_2) +
geom_smooth(aes(x=accountant, y=economist, color="Q.6(c) Model"),
method="lm", data=hw_earnings_3)
hw_hist_3 <- hw_earnings_3 %>%
ggplot() +
ggtitle("Question 6(c)/Corr: 0.7 & SD(econ earnings): 15000") +
coord_cartesian(xlim=c(45000, 90000)) +
geom_histogram(aes(x=observed_earnings,
fill=career),
binwidth=1000)
grid.arrange(hw_hist_2, hw_hist_3)
hw_hist_3 <- hw_earnings_3 %>%
ggplot() +
ggtitle("Question 6(c)/Corr: 0.7 & SD(econ earnings): 15000") +
coord_cartesian(xlim=c(45000, 100000)) +
geom_histogram(aes(x=observed_earnings,
fill=career),
binwidth=1000)
grid.arrange(hw_hist_2, hw_hist_3)
hw_hist_3 <- hw_earnings_3 %>%
ggplot() +
ggtitle("Q6(c)/Corr: 0.7 & SD(econ earnings):15000") +
coord_cartesian(xlim=c(45000, 100000)) +
geom_histogram(aes(x=observed_earnings,
fill=career),
binwidth=1000)
grid.arrange(hw_hist_2, hw_hist_3)
hw_earnings_3 %>%
group_by(career) %>%
summarise(accountant_earnings=mean(accountant),
economist_earnings=mean(economist),
n=n())
hw_matrix_4 <- matrix(c(225000000, 0, 0, 25000000),
nrow=2, ncol=2)
View(hw_matrix_4)
hw_earnings_4 <- as_tibble(rmvnorm(n, mean=c(60000, 65000),
sigma=hw_matrix_4),
.name_repair='minimal')
colnames(hw_earnings_4) <- c('economist', 'accountant')
hw_earnings_4 <- hw_earnings_4 %>%
mutate(career=case_when(accountant > economist ~ "accountant",
economist >= accountant ~ "economist"),
observed_earnings=case_when(accountant > economist ~ accountant,
economist >= accountant ~ economist))
View(hw_earnings_4)
ggplot() +
coord_cartesian(xlim=c(40000, 90000), ylim=c(30000, 90000)) +
geom_smooth(aes(x=accountant, y=economist, color="Q.6(c) Model"),
method="lm", data=hw_earnings_3) +
geom_smooth(aes(x=accountant, y=economist, color="Q.6(d) Model"),
method="lm", data=hw_earnings_4)
hw_hist_4 <- hw_earnings_4 %>%
ggplot() +
ggtitle("Q6(d)/Corr: 0 & SD(econ earnings):15000") +
coord_cartesian(xlim=c(45000, 900000)) +
geom_histogram(aes(x=observed_earnings,
fill=career),
binwidth=1000)
grid.arrange(hw_hist_3, hw_hist_4)
hw_hist_4 <- hw_earnings_4 %>%
ggplot() +
ggtitle("Q6(d)/Corr: 0 & SD(econ earnings):15000") +
coord_cartesian(xlim=c(0, 25000)) +
geom_histogram(aes(x=observed_earnings,
fill=career),
binwidth=1000)
grid.arrange(hw_hist_3, hw_hist_4)
hw_hist_4 <- hw_earnings_4 %>%
ggplot() +
ggtitle("Q6(d)/Corr: 0 & SD(econ earnings):15000") +
coord_cartesian(xlim=c(45000, 900000)) +
geom_histogram(aes(x=observed_earnings,
fill=career),
binwidth=1000)
grid.arrange(hw_hist_3, hw_hist_4)
hw_hist_4 <- hw_earnings_4 %>%
ggplot() +
ggtitle("Q6(d)/Corr: 0 & SD(econ earnings):15000") +
coord_cartesian(xlim=c(20000, 900000)) +
geom_histogram(aes(x=observed_earnings,
fill=career),
binwidth=1000)
grid.arrange(hw_hist_3, hw_hist_4)
hw_earnings_4 %>%
group_by(career) %>%
summarise(accountant_earnings=mean(accountant),
economist_earnings=mean(economist),
n=n())
View(hw_earnings_1)
#### PPHA 31202 Advanced Statistics #####
####    Homework Assignment - 3    #####
# Submission by : Avi Ahuja
# Section : 2
# UCID : 12208018
# Date: October 28th 2019
# “This submission is my work alone and complies with the 31202
# integrity policy. Add your initials to indicate your agreement: AA”
# Solution 6
# Loading relevant packages
library(tidyverse)
library(mvtnorm)
library(gridExtra)
n <- 100000 # setting the number of obs to draw from
set.seed(21102109) #setting the seed for reproducibility of results
# Question - 6(a)
# Correlation coefficient = 0.2
# Drawing the distribution
hw_matrix_1 <- matrix(c(100000000, 10000000, 10000000, 25000000),
nrow=2, ncol=2)
hw_earnings_1 <- as_tibble(rmvnorm(n, mean=c(60000, 65000),
sigma=hw_matrix_1),
.name_repair='minimal')
colnames(hw_earnings_1) <- c('economist', 'accountant')
hw_earnings_1 <- hw_earnings_1 %>%
mutate(career=case_when(accountant > economist ~ "accountant",
economist >= accountant ~ "economist"),
observed_earnings=case_when(accountant > economist ~ accountant,
economist >= accountant ~ economist))
# # Question - 6(b)
# Correlation coefficient = 0.7
# Drawing the distribution
hw_matrix_2 <- matrix(c(100000000, 35000000, 35000000, 25000000),
nrow=2, ncol=2)
hw_earnings_2 <- as_tibble(rmvnorm(n, mean=c(60000, 65000),
sigma=hw_matrix_2),
.name_repair='minimal')
colnames(hw_earnings_2) <- c('economist', 'accountant')
hw_earnings_2 <- hw_earnings_2 %>%
mutate(career=case_when(accountant > economist ~ "accountant",
economist >= accountant ~ "economist"),
observed_earnings=case_when(accountant > economist ~ accountant,
economist >= accountant ~ economist))
# Plotting stacked histogram of earnings distribution from questions Q.6(a) and Q.6(b)
hw_hist_1 <- hw_earnings_1 %>%
ggplot() +
ggtitle("Question 6(a)/Corr: 0.2") +
coord_cartesian(xlim=c(45000, 90000)) +
geom_histogram(aes(x=observed_earnings,
fill=career),
binwidth=1000)
hw_hist_2 <- hw_earnings_2 %>%
ggplot() +
ggtitle("Question 6(b)/Corr: 0.7") +
coord_cartesian(xlim=c(45000, 90000)) +
geom_histogram(aes(x=observed_earnings,
fill=career),
binwidth=1000)
grid.arrange(hw_hist_1, hw_hist_2)
# Generating tables 1 and 2 for analysis
hw_earnings_1 %>%
group_by(career) %>%
summarise(accountant_earnings=mean(accountant),
economist_earnings=mean(economist),
n=n())
hw_earnings_2 %>%
group_by(career) %>%
summarise(accountant_earnings=mean(accountant),
economist_earnings=mean(economist),
n=n())
# # Question - 6(c)
# Correlation coefficient = 0.7
# SD of economist earnings (y1) = 15000
# Drawing the distribution
hw_matrix_3 <- matrix(c(225000000, 52500000, 52500000, 25000000),
nrow=2, ncol=2)
hw_earnings_3 <- as_tibble(rmvnorm(n, mean=c(60000, 65000),
sigma=hw_matrix_3),
.name_repair='minimal')
colnames(hw_earnings_3) <- c('economist', 'accountant')
hw_earnings_3 <- hw_earnings_3 %>%
mutate(career=case_when(accountant > economist ~ "accountant",
economist >= accountant ~ "economist"),
observed_earnings=case_when(accountant > economist ~ accountant,
economist >= accountant ~ economist))
# Plotting stacked histogram of earnings distribution from questions Q.6(b) and Q.6(C)
hw_hist_3 <- hw_earnings_3 %>%
ggplot() +
ggtitle("Q6(c)/Corr: 0.7 & SD(econ earnings):15000") +
coord_cartesian(xlim=c(45000, 100000)) +
geom_histogram(aes(x=observed_earnings,
fill=career),
binwidth=1000)
grid.arrange(hw_hist_2, hw_hist_3)
# Generating table 3 for analysis
hw_earnings_3 %>%
group_by(career) %>%
summarise(accountant_earnings=mean(accountant),
economist_earnings=mean(economist),
n=n())
# # Question - 6(d)
# Correlation coefficient = 0
# SD of economist earnings (y1) = 15000
# Drawing the distribution
hw_matrix_4 <- matrix(c(225000000, 0, 0, 25000000),
nrow=2, ncol=2)
hw_earnings_4 <- as_tibble(rmvnorm(n, mean=c(60000, 65000),
sigma=hw_matrix_4),
.name_repair='minimal')
colnames(hw_earnings_4) <- c('economist', 'accountant')
hw_earnings_4 <- hw_earnings_4 %>%
mutate(career=case_when(accountant > economist ~ "accountant",
economist >= accountant ~ "economist"),
observed_earnings=case_when(accountant > economist ~ accountant,
economist >= accountant ~ economist))
hw_hist_4 <- hw_earnings_4 %>%
ggplot() +
ggtitle("Q6(d)/Corr: 0 & SD(econ earnings):15000") +
coord_cartesian(xlim=c(40000, 100000)) +
geom_histogram(aes(x=observed_earnings,
fill=career),
binwidth=1000)
grid.arrange(hw_hist_3, hw_hist_4)
hw_hist_4 <- hw_earnings_4 %>%
ggplot() +
ggtitle("Q6(d)/Corr: 0 & SD(econ earnings):15000") +
coord_cartesian(xlim=c(45000, 100000)) +
geom_histogram(aes(x=observed_earnings,
fill=career),
binwidth=1000)
grid.arrange(hw_hist_3, hw_hist_4)
## TA Session - 3
## Simulation of ommited variable bias
library (mvtnorm) #using this to draw all the x models to generate our lregression model
library (tidyverse)
set.seed(260693)
# WFunction to generate data from a true model, fit models, and extract ests
sim.and.fit <- function(beta_0, beta_1, beta_2, var, cov, n) {
#Draw x_1, x_2
cov_matrix <- matrix(c(var, cov, cov, var), ncol=2)
x <- rmvnorm(n=n, mean=c(0,0), sigma=cov_matrix) #means willbe centred around 0
colnames(x) <- c('x_1', 'x_2')
#Draw error terms from N(0,1) since they are normally distributed
mu <- rnorm(n=n, mean=0, sd=1)
y <- beta_0 + beta_1 *x[, 'x_1'] + beta_2*x[, 'x_2'] + mu
simulated.data <-tibble(y=y, x_1=x[, 'x_1'], x_2=x[, 'x_2'])
model.1 <- lm(y ~ x_1, data=simulated.data)
model.2 <- lm(y ~ x_1 + x_2, data=simulated.data)
return(c(model.1$coefficients[2], model.2$coefficients[2]))
}
beta_0 <- 2
beta_1 <- 4
beta_2 <- 6
uncorrelated.beta_1 <- replicate(5000, sim.and.fit(beta_0, beta_1,
beta_2, 10, 0, 100))
rownames(uncorrelated.beta_1) <- c('x_2.missing', 'x_2.included')
mean(uncorrelated.beta_1['x_2.missing', ])
mean(uncorrelated.beta_1['x_2.included', ])
#beta 0 will be the true beta 0, beta 1 the true beta
#var is the variance in our x observations
#cov is the covariance structure between our two draws, our x1s and our x2s
#n will be the sample size we get from each draw
#Trying the same with a correlation between the X1s and X2s
correlated.beta_1 <- replicate(5000, sim.and.fit(beta_0, beta_1,
beta_2, 10, 7, 100))  #When they are correlated, you are not partialling out the effect of x2,
#So the coefficient includes x2
rownames(correlated.beta_1) <- c('x_2.missing', 'x_2.included')
mean(correlated.beta_1['x_2.missing', ]) #mean with the ommitted variable excluded
mean(correlated.beta_1['x_2.included', ]) #mean with the ommitted variable included
library(wooldridge)
library(tidyverse)
install.packages("wooldridge")
library(wooldridge)
library(tidyverse)
data('bwght')
data('bwght')
m1 <- lm(bwght ~ cigs, data = bwght)
View(m1)
m1$coefficients
m1$coefficients[2]
summary(m1)
View(summary(m1))
ggplot() +
geom_point(aes(y=bwght, x=cigs), data=bwght) +
geom_abline(intercept = m1$coefficients[1], slope=m1$coefficients[2])
sim.t.vals <- function(n, alpha, beta, sigma_x, sigma_mu) {
#generating data from the true model
x <- rnorm(r, sd=sigma_x)
mu <- rnorm(n, sd=sigma_mu)
y <- alpha + beta * x + mu
fake.data <- tibble(y=y, x=x)
fit <- lm(y ~ x, data = fake.data)
t.stat <- summary(fit)$coefficients["x", "t value"]
return (t)
}
n <- 100
df <- n - 1 - 1
alpha <- 5
beta <- 2.5
sigma_x <- 1
sigma_mu <- 1
t.vals <- replicate(3000, sim.t.vals(n, alpha, beta, sigma_x, sigma_mu))
sim.t.vals <- function(n, alpha, beta, sigma_x, sigma_mu) {
#generating data from the true model
x <- rnorm(n, sd=sigma_x)
mu <- rnorm(n, sd=sigma_mu)
y <- alpha + beta * x + mu
fake.data <- tibble(y=y, x=x)
fit <- lm(y ~ x, data = fake.data)
t.stat <- summary(fit)$coefficients["x", "t value"]
return (t)
}
n <- 100
df <- n - 1 - 1
alpha <- 5
beta <- 2.5
sigma_x <- 1
sigma_mu <- 1
t.vals <- replicate(3000, sim.t.vals(n, alpha, beta, sigma_x, sigma_mu))
reject <- t.vals < qt (0.025, df = df) | t.vals > qt(0.975, df=df) # creating a vector that's telling us if we can reject the null or not
mean(reject)
setwd("~/Documents/GitHub/Data and Programming in R II/data_skills_2_r_hw2/Boundaries - ZIP Codes")
#loading relevant libraries
library(tidyverse)
library(sf)
library(spData)
path <- "~/Documents/GitHub/Data and Programming in R II/data_skills_2_r_hw2/Boundaries - ZIP Codes/"
chicago_zip <- st_read(paste0(path, "geo_export_40257423-bd60-4f23-a8b2-272a7aa56f4a.shp"))
View(chicago_zip)
fire_stations <- read_csv("Fire_Stations.csv")
setwd("~/Documents/GitHub/Data and Programming in R II/data_skills_2_r_hw2")
fire_stations <- read_csv("Fire_Stations.csv")
senior_centers <-read_csv("Senior_Centers.csv")
View(fire_stations)
View(chicago_zip)
glimpse(fire_stations)
fire_stations <- rename(fire_stations, "zip" = "ZIP")
chicago_zip_fire <- right_join(chicago_zip, fire_stations, by = "zip")
glimpse(chicago_zip)
fire_stations <- fire_stations %>%
mutate(zip = as.factor(zip))
glimpse(fire_stations)
chicago_zip_fire <- right_join(chicago_zip, fire_stations, by = "zip")
View(chicago_zip_fire)
unique(fire_stations$zip)
length(unique(fire_stations))
length(unique(fire_stations$zip))
View(chicago_zip)
length(unique(chicago_zip$zip))
length(unique(chicago_zip_fire$zip))
fire_count <- chicago_zip_fire %>%
group_by(zip) %>%
summarise(cnt = n()) %>%
mutate(cnt = cnt)
View(fire_count)
length(unique(fire_count$zip))
